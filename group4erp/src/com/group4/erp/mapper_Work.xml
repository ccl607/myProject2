<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.group4.erp.dao.WorkDAO">
	<sql id="WorkSearchKey">
		<if test="searchKey!=null and !searchKey.equals('')">
     			<if test="keyword!=null and !keyword.equals('')">
					<if test ="searchKey.equals('jikup')">
						and c.jikup like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('emp_name')">
						and e1.emp_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('dep_name')">
						and d.dep_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('destination')">
						and w.destination like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('mgr_name')">
						and mgr_name like '%'||#{keyword}||'%'
					</if>
     			</if>
     		</if>
	</sql>
	
	 
	 <select id='getbusinessTripListAllCnt' resultType="int">
		select count(*) from (
			select
	    		c.jikup               as "jikup"
	    		,e1.emp_name           as "emp_name"
	    		,d.dep_name             as "dep_name"
	    		,w.destination         as "destination"
	    		,w.work_outside_reason as "work_outside_reason"
	    		,to_char(w.outside_start_time,'yyyy-mm-dd am hh12:mi:ss (dy)','NLS_DATE_LANGUAGE=korean')  as "outside_start_time"
	    		,to_char(w.outside_end_time,'yyyy-mm-dd am hh12:mi:ss (dy)','NLS_DATE_LANGUAGE=korean')    as "outside_end_time"
	    		,nvl(e2.emp_name,' ')  as "mgr_name"
		    from work_outside_info w inner join employee e1 on w.emp_no=e1.emp_no
		    	 inner join code_jikup c on c.jikup_cd=e1.jikup_cd
		    	 inner join dept d on d.dep_no=e1.dep_no
	     		 left outer join employee e2 on e2.emp_no=e1.mgr_emp_no 
	     	where 1=1
	     		<include refid="WorkSearchKey"/>
	     	)
			
		where 1=1
			
	</select>
	
	<select id="getBusinessTripList"  parameterType="com.group4.erp.BusinessTripSearchDTO" resultType="java.util.HashMap">
		select * from(select zzz.*, rownum RNUM from(
			select
    		c.jikup               as "jikup"
    		,e1.emp_name           as "emp_name"
    		,d.dep_name             as "dep_name"
    		,w.destination         as "destination"
    		,w.work_outside_reason as "work_outside_reason"
    		,to_char(w.outside_start_time,'yyyy-mm-dd')  as "outside_start_time"
    		,to_char(w.outside_end_time,'yyyy-mm-dd')    as "outside_end_time"
    		,nvl(e2.emp_name,' ')  as "mgr_name"
	    from work_outside_info w inner join employee e1 on w.emp_no=e1.emp_no
	    	 inner join code_jikup c on c.jikup_cd=e1.jikup_cd
	    	 inner join dept d on d.dep_no=e1.dep_no
     		 left outer join employee e2 on e2.emp_no=e1.mgr_emp_no 
     	 where 1=1
     	 	<if test="searchKey!=null and !searchKey.isEmpty()">
     			<if test="keyword!= null and !keyword.isEmpty()">
					<if test ="searchKey.equals('jikup')">
						and c.jikup like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('emp_name')">
						and e1.emp_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('dep_name')">
						and d.dep_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('destination')">
						and w.destination like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('outside_start_time')">
						and to_char(w.outside_start_time,'yyyy-mm-dd') like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('outside_end_time')">
						and to_char(w.outside_end_time,'yyyy-mm-dd') like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('mgr_name')">
						and mgr_name like '%'||#{keyword}||'%'
					</if>
     			</if>
     		</if> 
     		<if test="thindexno!=null and ascdesc!=null">
     			order by
	     	 	 	<if test="thindexno=1">
	     				    case c.jikup 
	     				    	when '대표이사' then 1 
						        when '전무이사' then 2
						        when '상무이사' then 3
						        when '부장' then 4
						        when '차장' then 5
						        when '대리' then 7
						        when '주임' then 8
						        when '사원' then 9
						        when '기타' then 10 end  
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=2">
	     				    e1.emp_name
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=3">
	     				    d.dep_name
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=4">
	     				    w.destination 
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=5">
	     				    w.work_outside_reason 
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=6">
	     				    outside_start_time 
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=7">
	     				    outside_end_time 
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		 	<if test="thindexno=8">
	     				    nvl(e2.emp_name,' ') 
									<if test="ascdesc=asc">
										asc
									</if>
									<if test="ascdesc=desc">
										desc
									</if>
	     		 	</if>
	     		</if>
     	 ) zzz )
     	 where
     		<![CDATA[ RNUM>=${selectPageNo*rowCntPerPage-rowCntPerPage+1} and RNUM<=${selectPageNo*rowCntPerPage} ]]>
     	
     		order by RNUM	
     			<if test="thindexno!=null and ascdesc!=null">
     				  		<if test="thindexno=0">
									<if test="ascdesc=asc">
										asc
									</if> 
										<if test="ascdesc=desc">
										desc
									</if>
							</if>
	     		 	 </if>	     	
	</select>
</mapper>