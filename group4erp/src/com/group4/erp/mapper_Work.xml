<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.group4.erp.dao.WorkDAO">
	<sql id="WorkSearchKey">
			<if test="searchKey!=null and !searchKey.isEmpty()">
     			<if test="keyword!= null and !keyword.isEmpty()">
					<if test ="searchKey.equals('jikup')">
						and c.jikup like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('emp_name')">
						and e1.emp_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('dep_name')">
						and d.dep_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('destination')">
						and w.destination like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('outside_start_time')">
						and to_char(w.outside_start_time,'yyyy-mm-dd') like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('outside_end_time')">
						and to_char(w.outside_end_time,'yyyy-mm-dd') like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('mgr_name')">
						and e2.emp_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('travel_payment')">
						and travel_payment like '%'||#{keyword}||'%'
					</if>
     			</if>
     		</if>
	</sql>
	
	 
	 <select id='getbusinessTripListAllCnt' resultType="int">
		select count(*) from (
			select
	    		c.jikup               as "jikup"
	    		,e1.emp_name           as "emp_name"
	    		,d.dep_name             as "dep_name"
	    		,w.destination         as "destination"
	    		,w.work_outside_reason as "work_outside_reason"
	    		,to_char(w.outside_start_time,'yyyy-mm-dd ')  as "outside_start_time"
	    		,to_char(w.outside_end_time,'yyyy-mm-dd ')    as "outside_end_time"
	    		,nvl(e2.emp_name,' ')  as "mgr_name"
		    from work_outside_info w inner join employee e1 on w.emp_no=e1.emp_no
		    	 inner join code_jikup c on c.jikup_cd=e1.jikup_cd
		    	 inner join dept d on d.dep_no=e1.dep_no
	     		 left outer join employee e2 on e2.emp_no=e1.mgr_emp_no 
	     	where 1=1
	     		<include refid="WorkSearchKey"/>
	     	)

		where 1=1
			
	</select>
	
	<select id="getBusinessTripList"  parameterType="com.group4.erp.BusinessTripSearchDTO" resultType="java.util.HashMap">
		select * from(select zzz.*, rownum RNUM from(
			select
			work_outside_seq	   as "work_outside_seq"
    		,c.jikup               as "jikup"
    		,e1.emp_name           as "emp_name"
    		,d.dep_name            as "dep_name"
    		,w.destination         as "destination"
    		,w.work_outside_reason as "work_outside_reason"
    		,to_char(w.outside_start_time,'yyyy-mm-dd')  as "outside_start_time"
    		,to_char(w.outside_end_time,'yyyy-mm-dd')    as "outside_end_time"
    		,nvl(e2.emp_name,' ')  as "mgr_name"
    		,travel_payment		   as "travel_payment"
  			,c.jikup_cd			   as "jikup_cd"
	    from work_outside_info w inner join employee e1 on w.emp_no=e1.emp_no
	    	 inner join code_jikup c on c.jikup_cd=e1.jikup_cd
	    	 inner join dept d on d.dep_no=e1.dep_no
     		 left outer join employee e2 on e2.emp_no=e1.mgr_emp_no 
     	 where 1=1
     	 	<if test="searchKey!=null and !searchKey.isEmpty()">
     			<if test="keyword!= null and !keyword.isEmpty()">
					<if test ="searchKey.equals('jikup')">
						and c.jikup like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('emp_name')">
						and e1.emp_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('dep_name')">
						and d.dep_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('destination')">
						and w.destination like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('outside_start_time')">
						and to_char(w.outside_start_time,'yyyy-mm-dd') like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('outside_end_time')">
						and to_char(w.outside_end_time,'yyyy-mm-dd') like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('mgr_name')">
						and e2.emp_name like '%'||#{keyword}||'%'
					</if>
					<if test ="searchKey.equals('travel_payment')">
						and travel_payment like '%'||#{keyword}||'%'
					</if>
     			</if>
     		</if>
	     <if test="sort!=null and sort.length()>0">
	     	order by ${sort}
		 </if>	
		 <if test="sort==null">
		    order by outside_start_time desc
		 </if>
     	 ) zzz )
     	 where	1=1 
     	 		and 
     	 		<![CDATA[ RNUM>=${selectPageNo*rowCntPerPage-rowCntPerPage+1} and RNUM<=${selectPageNo*rowCntPerPage} ]]>
     	 
	</select>
		
	<!--  <select id="getbusinessTripDTO" parameterType="int" resultType="com.naver.erp.BusinessTripDTO">
		select
				work_outside_seq	   as "work_outside_seq"
	    		,c.jikup               as "jikup"
	    		,e1.emp_name           as "emp_name"
	    		,d.dep_name            as "dep_name"
	    		,w.destination         as "destination"
	    		,w.work_outside_reason as "work_outside_reason"
	    		,to_char(w.outside_start_time,'yyyy-mm-dd')  as "outside_start_time"
	    		,to_char(w.outside_end_time,'yyyy-mm-dd')    as "outside_end_time"
	    		,nvl(e2.emp_name,' ')  as "mgr_name"
	  			,c.jikup_cd			   as "jikup_cd"
		from work_outside_info w inner join employee e1 on w.emp_no=e1.emp_no
	    	 inner join code_jikup c on c.jikup_cd=e1.jikup_cd
	    	 inner join dept d on d.dep_no=e1.dep_no
     		 left outer join employee e2 on e2.emp_no=e1.mgr_emp_no
     	where work_outside_seq=#{work_outside_seq}
	</select> -->
	
	<insert id="insertBusinessTrip" parameterType="com.group4.erp.BusinessTripDTO">
		 insert into work_outside_info(work_outside_seq
		 								,emp_no
		 								,destination
		 								,work_outside_reason
		 								,outside_start_time
		 								,outside_end_time)
   				values( work_outside_info_seq.nextval
   				 		,#{emp_no}
   				 		,#{destination}
   				 		,#{work_outside_reason}
   				 		,#{outside_start_time}
   				 		,#{outside_end_time}
   				 		)
	</insert>
</mapper>