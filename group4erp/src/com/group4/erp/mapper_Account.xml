<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.group4.erp.dao.AccountDAO">
	<!-- 로그인 아이디, 암호의 존재 개수를 검색하는 select문을 내포한 <select> 태그 선언 -->
	<!-- 
		* <select> 태그 속성 설명
		id="getAdminCnt" ==> SQL 구문의 고유 아이디값 설정. DAO 클래스의 메소드 이름과 동일
		parameterType="hashmap" ==> SQL 구문에 삽입될 외부 데이터의 자료형 설정
		resultType="int" ==> SQL 구문의 실행 후 리턴값 자료형 설정
		
		* SQL 구문 안의 #{HashMap객체키값명} 설명
		키값에 대응하는 데이터가 문자열을 삽입하라는 뜻이다. 만약 문자면 ''(싱글쿼트)로 감싸 삽입하고 아니면 그대로 삽입한다.
		
		* SQL 구문 안의 #{HashMap객체키값명} 설명
		키값에 대응하는 데이터의 종류에 관계없이 데이터를 그대로 삽입
	
	 -->  
	 <sql id="WhereCondition">
		<if test="searchKeyword !=null and searchKeyword.length() > 0">
				and (
					upper(corp_no) like upper('%${searchKeyword}%') 
					or upper(corp_name) like upper('%${searchKeyword}%')
					or upper(ceo_name) like upper('%${searchKeyword}%')
					or upper(corp_addr) like upper('%${searchKeyword}%')
					or upper(corp_fax) like upper('%${searchKeyword}%')
					or upper(corp_business_area) like upper('%${searchKeyword}%')
				)			
		</if>
	</sql>
	

	 <sql id="CorpCondition">
		<if test="searchKeyword !=null and searchKeyword.length() > 0">
				and (
					upper(co.order_books_no) like upper('%${searchKeyword}%') 
					or upper(co.corp_no) like upper('%${searchKeyword}%')
					or upper(co.books_qty) like upper('%${searchKeyword}%')
					or upper(co.isbn13) like upper('%${searchKeyword}%')
					
				)			
		</if>
	</sql>

	<select id='getCorpListCnt' resultType="int">
		select count(*) from corporation_cus
	</select>
	
	
	<select id='getCorpList' resultType="com.group4.erp.CorporationDTO">
		select * from (select zzz.*, rownum RNUM from (
			select
				corp_no "corp_no",
				corp_name "corp_name",
				ceo_name "ceo_name",
				corp_addr "corp_addr",
				corp_fax "corp_fax",
				corp_tel "corp_tel",
				corp_business_area "corp_business_area"
			from corporation_cus
			where 1=1 
			<include refid="WhereCondition" />
			
		) zzz) where RNUM&gt;= ${selectPageNo * rowCntPerPage - rowCntPerPage +1} and RNUM&lt;=${selectPageNo * rowCntPerPage}
	</select>
	
	<select id='getCorpInfo' parameterType="String" resultType="com.group4.erp.CorporationDTO">
		
		select
			corp_no "corp_no",
			corp_name "corp_name",
			ceo_name "ceo_name",
			corp_addr "corp_addr",
			corp_fax "corp_fax",
			corp_tel "corp_tel",
			corp_business_area "corp_business_area"
		from corporation_cus
		where 1=1 
		and corp_no = #{corp_no}
			
	</select>
	
	<insert id="insertCorp" parameterType="com.group4.erp.CorporationDTO">
		insert into corporation_cus(
			corp_no, 
			corp_name, 
			ceo_name, 
			corp_addr, 
			corp_fax, 
			corp_tel, 
			corp_business_area )
			values (
			  #{corp_no},	
			  #{corp_name},
			  #{ceo_name},
			  #{corp_addr},
			  #{corp_fax},
			  #{corp_tel},
			  #{corp_business_area}
			)
	</insert>
	
	
	<select id='getCorpOrderCnt' parameterType = "com.group4.erp.CorpSearchDTO" resultType="int">
		select count(*) from corp_order_info where corp_no is not null
		
	</select>
	
	<select id='getCorpOrderList' parameterType = "com.group4.erp.CorpSearchDTO" resultType="com.group4.erp.CorpOrderDTO">
		select
    		co.order_books_no||'' "order_books_no",
    		co.corp_no "corp_no",
    		(select cc.corp_name from corporation_cus cc where cc.corp_no = co.corp_no) "corp_name",   
    		(select cc.ceo_name from corporation_cus cc where cc.corp_no = co.corp_no) "ceo_name",
    		co.books_qty "books_qty",
    		(select b.book_price from book b where b.isbn13= co.isbn13) "book_price",
    		(select b.book_price from book b where b.isbn13= co.isbn13) * co.books_qty "tot_cost",
    		to_char(co.order_dt, 'yyyy.mm.dd')|| '('||to_char(co.order_dt, 'dy', 'nls_date_language=Korean' )||')' "order_dt"
    	from corp_order_info co
    	where co.corp_no is not null
    	<include refid="CorpCondition" />
	</select>




</mapper>